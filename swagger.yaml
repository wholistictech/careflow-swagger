---
swagger: "2.0"
info:
  description: "API for the Careflow platform for development of the frontend. The\
    \ api format conforms to JSON:API format except the public pages for log in and\
    \ sign ups. "
  version: "1.0.0"
  title: "CareflowCaregiver"
  contact:
    name: "Kariuki Gathitu"
    email: "kariuki@zegetech.com"
host: "careflow-api-staging.zegetech.com"
basePath: "/api/v1"
schemes:
- "https"
consumes:
- "application/vnd.api+json"
produces:
- "application/vnd.api+json"
security:
- JWT: []
- JSONAPI: []
paths:
  /login:
    post:
      tags:
      - "Authentication"
      summary: "Login"
      description: "Sign into the platform. Gives back a JWT token for the user to\
        \ log  in"
      consumes: []
      produces:
      - "application/vnd.api+json"
      parameters:
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
        x-examples:
          application/vnd.api+json: "{\n\t\"user\" :\n\t{\n\t\t\"email\":\"kiki@lolo4.com\"\
            ,\n\t\t\"password\":\"kikiloloo\"\n\t}\n}"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/User"
          headers:
            Authorization:
              type: "string"
              description: "JWT token"
              x-example: "Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwZGE3Y2E0Yy1lMTViLTQ5ZDUtODBiNy1hNjZmMTAxOWIyN2IiLCJmb28iOiJiYXIiLCJzdWIiOiIxIiwic2NwIjoidXNlciIsImF1ZCI6bnVsbCwiaWF0IjoxNTEzNzY3MDA3LCJleHAiOjE1MTM3NzA2MDd9.dnjKmusPb7ku-VY97pf71DV0bYSGdyjjKjJJUoUBV7s"
            Access-Control-Expose-Headers:
              type: "string"
              x-example: "Authorization"
      security:
      - JSONAPI: []
  /sign_up:
    post:
      tags:
      - "Authentication"
      - "Defered"
      summary: "Sign up"
      description: "Sign up to the platform through an invitation token"
      consumes:
      - "application/vnd.api+json"
      parameters:
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
        x-examples:
          application/vnd.api+json: " {\n    \"user\": {\n         \"invitation_token\"\
            : \"sc46MX7-jzoo9N5qtL6y\",\n         \"password\": \"newpassword\",\n\
            \         \"password_confirmation\": \"newpassword\",\n         \"name\"\
            : \"kariuki gathitu\"\n    }\n}\n"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/User"
          headers:
            Authorization:
              type: "string"
              x-example: "Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJhNGI1MWNmYS0xOTg1LTQxNjktODFhYi03Yzk5NzUwZmRkM2EiLCJzdWIiOiIxMTYiLCJzY3AiOiJ1c2VyIiwiYXVkIjpudWxsLCJpYXQiOjE1MTU1OTI4MTMsImV4cCI6MTUxNTU5NjQxM30.q6q1ZMO6PqGDQWfTSM2UpvLraLgbDJ_M3vgDAcuxNS0"
            Access-Control-Expose-Headers:
              type: "string"
              x-example: "Authorization"
        422:
          description: "Status 422"
          schema:
            type: "object"
            description: "errors with array of error objects"
          examples:
            application/vnd.api+json: "{\n    \"errors\": {\n        \"email\": [\n\
              \            \"has already been taken\"\n        ]\n    }\n}"
      security:
      - JSONAPI: []
  /invitation:
    post:
      tags:
      - "Authentication"
      summary: "Accept Invite"
      description: "Accepts invitation and creates the users password, logging them\
        \ in"
      consumes: []
      parameters:
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
        x-examples:
          application/vnd.api+json: " {\n    \"user\": {\n         \"invitation_token\"\
            : \"sc46MX7-jzoo9N5qtL6y\",\n         \"password\": \"newpassword\",\n\
            \         \"password_confirmation\": \"newpassword\",\n         \"name\"\
            : \"kariuki gathitu\"\n    }\n}\n"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/User"
          headers:
            Authorization:
              type: "string"
              x-example: "Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJhNGI1MWNmYS0xOTg1LTQxNjktODFhYi03Yzk5NzUwZmRkM2EiLCJzdWIiOiIxMTYiLCJzY3AiOiJ1c2VyIiwiYXVkIjpudWxsLCJpYXQiOjE1MTU1OTI4MTMsImV4cCI6MTUxNTU5NjQxM30.q6q1ZMO6PqGDQWfTSM2UpvLraLgbDJ_M3vgDAcuxNS0"
            Access-Control-Expose-Headers:
              type: "string"
              x-example: "Authorization"
      security:
      - JSONAPI: []
  /confirmation:
    get:
      tags:
      - "Authentication"
      summary: "Confirm"
      parameters:
      - name: "confirmation_token"
        in: "query"
        required: false
        type: "string"
        x-example: "987897f987f98ds7affa"
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/User"
      security:
      - JSONAPI: []
    post:
      tags:
      - "Authentication"
      summary: "Resend confirmation"
      consumes: []
      parameters:
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
        x-examples:
          application/vnd.api+json: " {\n    \"user\": {\n         \"email\": \"kili@polo9.com\"\
            \n    }\n}\n"
      responses:
        204:
          description: "Status 204"
      security:
      - JSONAPI: []
  /password:
    post:
      tags:
      - "Authentication"
      summary: "Reset Password Request"
      description: "Reset password for certain email"
      consumes: []
      parameters:
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
        x-examples:
          application/vnd.api+json: "{\n\t\"user\" :\n\t{\n\t\t\"email\":\"kili@polo10.com\"\
            \n\t}\n}"
      responses:
        204:
          description: "Status 204"
      security:
      - JSONAPI: []
    patch:
      tags:
      - "Authentication"
      summary: "Reset password"
      description: "Update the password for a given reset request"
      consumes: []
      parameters:
      - name: "Accept"
        in: "header"
        required: true
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
        x-examples:
          application/vnd.api+json: "{\n\t\"user\" :\n\t{\n\t\t\"password\":\"newpassword\"\
            ,\n\t\t\"password_confirmation\":\"newpassword\",\n\t\t\"reset_password_token\"\
            : \"htMbxyg6hG1icnPx6HpS\"\n\t}\n}"
      responses:
        204:
          description: "Status 204"
        422:
          description: "Status 422"
          schema:
            type: "object"
          examples:
            application/vnd.api+json: "{\n    \"errors\": {\n        \"reset_password_token\"\
              : [\n            \"is invalid\"\n        ]\n    }\n}"
      security:
      - JSONAPI: []
  /users/invitation:
    post:
      tags:
      - "Users"
      summary: "Invite user"
      description: "Creates a user and sends and invitation to their email. returns\
        \ invited user"
      consumes: []
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
        x-examples:
          application/vnd.api+json: " {\n    \"user\": {\n         \"email\": \"kgathi2+101@gmail.com\"\
            ,\n         \"name\" : \"Kariz makania\",\n         \"position\":\"caregiver\"\
            ,\n         \"caregiver_type\" : \"caregiver\"\n    }\n}"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/User"
      security:
      - JWT: []
  /users/sign_out:
    delete:
      tags:
      - "Users"
      summary: "Sign out"
      description: "Sign out"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Active JWT token"
        x-example: "Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwZGE3Y2E0Yy1lMTViLTQ5ZDUtODBiNy1hNjZmMTAxOWIyN2IiLCJmb28iOiJiYXIiLCJzdWIiOiIxIiwic2NwIjoidXNlciIsImF1ZCI6bnVsbCwiaWF0IjoxNTEzNzY3MDA3LCJleHAiOjE1MTM3NzA2MDd9.dnjKmusPb7ku-VY97pf71DV0bYSGdyjjKjJJUoUBV7s"
      responses:
        204:
          description: "Status 204"
      security:
      - JWT: []
  /users/password:
    patch:
      summary: "Change Password"
      consumes: []
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
        x-examples:
          application/vnd.api+json: " {\n    \"user\": {\n         \"password\": \"\
            new_password\",\n         \"password_confirmation\" : \"new_password\"\
            ,\n         \"current_password\":\"old_password\"\n    }\n}\n"
      responses:
        204:
          description: "Status 204"
      security:
      - JWT: []
  /users:
    get:
      tags:
      - "Users"
      summary: "Get all users"
      description: "Retrieves only users in the allowed logged in users scope"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Users"
      security:
      - JWT: []
  /users/{id}:
    get:
      tags:
      - "Users"
      summary: "Get user"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/User"
      security:
      - JWT: []
    patch:
      tags:
      - "Users"
      summary: "Update user"
      consumes: []
      parameters:
      - name: "transition_to"
        in: "query"
        required: false
        type: "string"
        description: "for transitioning a user to the next state. runs validation\
          \ related to that particular state. transition_to 'next' moves use to next\
          \ state, otherwise explicitly define the state name"
        x-example: "next"
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
          properties:
            data:
              $ref: "#/definitions/User"
        x-examples:
          application/vnd.api+json: "\n{\n    \"data\": {\n    \t\"id\": 115,\n  \
            \      \"type\": \"users\",\n        \"attributes\": {\n            \"\
            birth-date\":\"1990/12/12\",\n            \"avatar\": \"avatar-url2\"\
            ,\n            \"address-data\": {\n            \t\"street\":\"temple\
            \ road\",\n            \t\"corner\":{\n            \t\t\"that\":\"one\"\
            \n            \t}\n            }\n        }\n    }\n}"
      responses:
        202:
          description: "Modification accepted"
          schema:
            $ref: "#/definitions/User"
      security:
      - JWT: []
    parameters:
    - name: "id"
      in: "path"
      required: true
      type: "string"
  /users/{id}/{switch}:
    patch:
      tags:
      - "Users"
      - "Pending"
      summary: "Switch or toggle user states"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      responses:
        200:
          description: "Status 200"
        422:
          description: "Status 422"
      security:
      - JWT: []
    parameters:
    - name: "id"
      in: "path"
      required: true
      type: "string"
    - name: "switch"
      in: "path"
      required: true
      type: "string"
  /users/{id}/documents:
    get:
      tags:
      - "Users"
      summary: "Get user documents"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Documents"
      security:
      - JWT: []
    parameters:
    - name: "id"
      in: "path"
      required: true
      type: "string"
  /documents:
    get:
      tags:
      - "Documents"
      summary: "Show all document"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Documents"
      security:
      - JWT: []
    post:
      tags:
      - "Documents"
      summary: "Create document"
      consumes: []
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/Document"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Document"
      security:
      - JWT: []
  /documents/{id}:
    get:
      tags:
      - "Documents"
      summary: "Show document"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Document"
      security:
      - JWT: []
    delete:
      tags:
      - "Documents"
      summary: "Delete Document"
      description: "Delete Document"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      responses:
        204:
          description: "Status 204"
      security:
      - JWT: []
    patch:
      tags:
      - "Documents"
      summary: "Update document"
      consumes: []
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
        x-examples:
          application/vnd.api+json: "{\n\t\"data\": {\n\t\t\"type\": \"documents\"\
            ,\n\t\t\"id\": \"09f9a8sf08das09f8d\",\n\t\t\"attributes\": {\n\t\t\t\"\
            expiry_date\": \"2017-12-20\",\n\t\t}\n\t}\n}\n\n"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Document"
      security:
      - JWT: []
    parameters:
    - name: "id"
      in: "path"
      required: true
      type: "string"
  /documents/1/{switch}:
    get:
      tags:
      - "Documents"
      summary: "Pull a switch or button"
      description: "All the parameters are in query sring, therefore swithc request\
        \ cannot be too complex"
      parameters:
      - name: "publish_date"
        in: "query"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      responses:
        200:
          description: "Status 200"
      security:
      - JWT: []
    parameters:
    - name: "switch"
      in: "path"
      required: true
      type: "string"
      x-example: "publish"
  /streams:
    get:
      tags:
      - "Streams"
      summary: "List Streams"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Streams"
      security:
      - JWT: []
  /streams/{stream_id}:
    get:
      tags:
      - "Streams"
      summary: "Get Stream"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Stream"
      security:
      - JWT: []
    patch:
      tags:
      - "Streams"
      summary: "Update Stream"
      consumes: []
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
        x-examples:
          application/vnd.api+json: "{\n    \"data\": {\n    \t\"id\": 6,\n     \"\
            type\": \"streams\",\n     \"attributes\": {\n\t\t\"mark\" : \"seen\"\n\
            \           \n      }\n    }\n}"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Stream"
      security:
      - JWT: []
    parameters:
    - name: "stream_id"
      in: "path"
      required: true
      type: "string"
  /notifications:
    get:
      tags:
      - "Notifications"
      summary: "List notifications"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Notifications"
      security:
      - JWT: []
  /notification/{id}:
    get:
      tags:
      - "Notifications"
      summary: "Get notification"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Notification"
      security:
      - JWT: []
    patch:
      tags:
      - "Notifications"
      summary: "Update notification"
      consumes: []
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
        x-examples:
          application/vnd.api+json: "{\n    \"data\": {\n    \t\"id\": 3,\n     \"\
            type\": \"notifications\",\n     \"attributes\": {\n\t\t\"mark\" : \"\
            seen\"\n           \n      }\n    }\n}"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Notification"
      security:
      - JWT: []
    parameters:
    - name: "id"
      in: "path"
      required: true
      type: "string"
  /notification/{id}/{switch}:
    parameters:
    - name: "id"
      in: "path"
      required: true
      type: "string"
    - name: "switch"
      in: "path"
      required: true
      type: "string"
      x-example: "seed"
  /activities:
    get:
      tags:
      - "Events"
      summary: "List Events"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Events"
      security:
      - JWT: []
    post:
      tags:
      - "Events"
      summary: "Create Event"
      consumes: []
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
        x-examples:
          application/vnd.api+json: "{\n    \"data\": {\n        \"type\": \"events\"\
            ,\n        \"attributes\": {\n            \"title\": \"orientation class\
            \ 1\",\n            \"description\": \"Orientation of the Caregivers\"\
            ,\n            \"start_at\": \"2018-02-19 16:02:31 +0000\",\n        \
            \    \"end_at\": \"2018-02-19 16:02:31 +0000\"\n        }\n    }\n}\n"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Event"
      security:
      - JWT: []
  /activities/{event_id}:
    get:
      tags:
      - "Events"
      summary: "Get Event"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Event"
      security:
      - JWT: []
    delete:
      tags:
      - "Events"
      summary: "Delete Event"
      parameters: []
      responses:
        204:
          description: "Status 204"
      security:
      - JWT: []
    patch:
      tags:
      - "Events"
      summary: "Update Event"
      consumes: []
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
        x-examples:
          application/vnd.api+json: "{\n    \"data\": {\n        \"type\": \"events\"\
            ,\n        \"id\": 1,\n        \"attributes\": {\n            \"title\"\
            : \"orientation class 2\"\n        }\n    }\n}\n\n"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Event"
      security:
      - JWT: []
    parameters:
    - name: "event_id"
      in: "path"
      required: true
      type: "string"
  /contracts:
    get:
      tags:
      - "Contracts"
      summary: "List Contracts"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Contracts"
      security:
      - JWT: []
  /contracts/{contract_id}:
    get:
      tags:
      - "Contracts"
      summary: "Get Contract"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Contract"
      security:
      - JWT: []
    patch:
      tags:
      - "Contracts"
      summary: "Update Contract"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Contract"
      security:
      - JWT: []
    parameters:
    - name: "contract_id"
      in: "path"
      required: true
      type: "string"
  /contracts/1/{switch}:
    parameters:
    - name: "switch"
      in: "path"
      required: true
      type: "string"
      x-example: "accept"
  /placements:
    get:
      tags:
      - "Placements"
      summary: "List Placements"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Placements"
      security:
      - JWT: []
    post:
      tags:
      - "Placements"
      summary: "Create Placements"
      consumes: []
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
        x-examples:
          application/vnd.api+json: "{\n    \"data\": {\n        \"type\": \"placements\"\
            ,\n        \"attributes\": {\n            \"user_id\": 1,\n          \
            \  \"station\": {\n                \"id\": 1,\n                \"name\"\
            : \"Green room\",\n                \"agency_id\": 1,\n               \
            \ \"company_id\": 1,\n                \"company_type\": \"waiver\"\n \
            \           },\n            \"assignments_attributes\": [\n          \
            \      {\n                    \"person\": {\n                        \"\
            name\": \"Deion Stoltenberg\",\n                        \"station_id\"\
            : 1\n                    }\n                },\n                {\n  \
            \                  \"person\": {\n                        \"name\": \"\
            Phyllis Yundt\",\n                        \"station_id\": 1\n        \
            \            }\n                },\n                {\n              \
            \      \"person\": {\n                        \"name\": \"Reymundo Lakin\
            \ DDS\",\n                        \"station_id\": 1\n                \
            \    }\n                }\n            ]\n        }\n    }\n}\n\n"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Placement"
      security:
      - JWT: []
  /placements/{placement_id}:
    get:
      tags:
      - "Placements"
      summary: "Get Placement"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Placement"
      security:
      - JWT: []
    patch:
      tags:
      - "Placements"
      summary: "Update Placement"
      consumes: []
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
        x-examples:
          application/vnd.api+json: "{\n    \"data\": {\n        \"type\": \"placements\"\
            ,\n        \"id\": 24,\n        \"attributes\": {\n            \n    \
            \    }\n    }\n}\n"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Placement"
      security:
      - JWT: []
    parameters:
    - name: "placement_id"
      in: "path"
      required: true
      type: "string"
  /system/whoami:
    get:
      tags:
      - "System"
      summary: "Get Current User"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/User"
      security:
      - JWT: []
  /system/schemas/{schema_name}:
    get:
      tags:
      - "System"
      summary: "Get Schema of document"
      parameters: []
      responses:
        200:
          description: "Status 200"
          schema:
            type: "object"
          examples:
            application/vnd.api+json: "\n  {\n    \"id\": \"0001\",\n    \"name\"\
              : \"application_data\",\n    \"type\":  \"data\",\n    \"content\":\
              \ \"Long content for a consent or notice \",\n    \"schema\": {\n  \"\
              type\": \"object\",\n  \"properties\": {\n    \"position\": {\n    \
              \  \"title\": \"Position\",\n      \"description\": \"Position applying\
              \ for\",\n      \"type\": \"string\",\n      \"oneOf\": [\n        {\n\
              \          \"enum\": [\n            \"direct_suppoty\"\n          ],\n\
              \          \"title\": \"DSP\"\n        },\n        {\n          \"enum\"\
              : [\n            \"qipd\"\n          ],\n          \"title\": \"QIPD\"\
              \n        }\n      ]\n    },\n    \"earliest_availablity\": {\n    \
              \  \"title\": \"Earliest Availability\",\n      \"description\": \"\
              When can you be available to work\",\n      \"type\": \"string\",\n\
              \      \"format\": \"date-time\"\n    },\n    \"available_hours_daily\"\
              : {\n      \"title\": \"Daily hours avaiable\",\n      \"description\"\
              : \"Hours available to work. (enter 8 for)\",\n      \"type\": \"integer\"\
              ,\n      \"minimum\": 1,\n      \"maximum\": 8\n    },\n    \"us_employability\"\
              : {\n      \"title\": \"US Work Status\",\n      \"description\": \"\
              Authorized to work in the US\",\n      \"type\": \"boolean\"\n    },\n\
              \    \"valid_drivers_license\": {\n      \"title\": \"Drivers LIcense\
              \ Status\",\n      \"description\": \"Valid Dring license available\"\
              ,\n      \"type\": \"boolean\"\n    },\n    \"work_weekends\": {\n \
              \     \"title\": \"Weekend Status\",\n      \"description\": \"Can work\
              \ weekend\",\n      \"type\": \"boolean\"\n    },\n    \"work_overnight\"\
              : {\n      \"title\": \"Overnight status\",\n      \"description\":\
              \ \"Can work overnight\",\n      \"type\": \"boolean\"\n    },\n   \
              \ \"any_work_hindrance_condition\": {\n      \"title\": \"Work Hindrances\"\
              ,\n      \"description\": \"Any conditions limiting you from performing\
              \ essential functions for applied position\",\n      \"type\": \"string\"\
              ,\n      \"maxLength\": 200\n    },\n    \"work_motivation\": {\n  \
              \    \"title\": \"Work Motivation\",\n      \"description\": \"Why do\
              \ you want to work with this clientelle\",\n      \"type\": \"string\"\
              ,\n      \"maxLength\": 500\n    },\n    \"employee_referral\": {\n\
              \      \"title\": \"Employee referral\",\n      \"description\": \"\
              how did you here of the opening\",\n      \"type\": \"string\",\n  \
              \    \"maxLength\": 200\n    },\n    \"backgroud_history\": {\n    \
              \  \"type\": \"object\",\n      \"title\": \"Background histroy\",\n\
              \      \"properties\": {\n        \"residential_locations\": {\n   \
              \       \"title\": \"Residential History\",\n          \"description\"\
              : \"List all cities ans states where you have lived last 7 years (City,State,\
              \ year)\",\n          \"type\": \"array\",\n          \"items\": {\n\
              \            \"type\": \"string\"\n          }\n        },\n       \
              \ \"vocational_locations\": {\n          \"title\": \"Vocational History\"\
              ,\n          \"description\": \"List all cities and states where you\
              \ have worked last 7 years (City,State, year)\",\n          \"type\"\
              : \"array\",\n          \"items\": {\n            \"type\": \"string\"\
              \n          }\n        },\n        \"aliases\": {\n          \"title\"\
              : \"Name Aliases\",\n          \"description\": \"List all aliases you\
              \ have used formally and informally. Alias names are maiden names, married\
              \ names, nicknames and any other name used or known as\",\n        \
              \  \"type\": \"string\"\n        },\n        \"criminal_conviction\"\
              : {\n          \"title\": \"Criminal conviction\",\n          \"description\"\
              : \"Have you been convicted past 7 years\",\n          \"type\": \"\
              boolean\"\n        },\n        \"pending_cases\": {\n          \"title\"\
              : \"Pending cases\",\n          \"description\": \"Do you have pending\
              \ case or trial\",\n          \"type\": \"boolean\"\n        },\n  \
              \      \"legal_details\": {\n          \"title\": \"Details of legal\
              \ action\",\n          \"description\": \"Provide details and explaination\
              \ for each conviction or pending case or trial including ...\",\n  \
              \        \"type\": \"string\",\n          \"dependsOn\": [\n       \
              \     \"pending_cases\",\n            \"criminal_conviction\"\n    \
              \      ]\n        }\n      }\n    },\n    \"education_history\": {\n\
              \      \"title\": \"Education Histoy\",\n      \"description\": \"Provide\
              \ Education history\",\n      \"type\": \"object\",\n      \"properties\"\
              : {\n        \"history\": {\n          \"type\": \"array\",\n      \
              \    \"items\": {\n            \"type\": \"object\",\n            \"\
              properties\": {\n              \"school_type\": {\n                \"\
              title\": \"School Type\",\n                \"description\": \"school\
              \ type\",\n                \"type\": \"string\",\n                \"\
              oneOf\": [\n                  {\n                    \"enum\": [\n \
              \                     \"high_school\"\n                    ],\n    \
              \                \"title\": \"Hight school\"\n                  },\n\
              \                  {\n                    \"enum\": [\n            \
              \          \"college\"\n                    ],\n                   \
              \ \"title\": \"College\"\n                  },\n                  {\n\
              \                    \"enum\": [\n                      \"post_colledge\"\
              \n                    ],\n                    \"title\": \"Post College\"\
              \n                  },\n                  {\n                    \"\
              enum\": [\n                      \"other\"\n                    ],\n\
              \                    \"title\": \"Other Training\"\n               \
              \   }\n                ]\n              },\n              \"name_location\"\
              : {\n                \"title\": \"Name and Location\",\n           \
              \     \"description\": \"Name and location of school\",\n          \
              \      \"type\": \"string\"\n              },\n              \"year_attended\"\
              : {\n                \"title\": \"Year attended\",\n               \
              \ \"description\": \"Years attended\",\n                \"type\": \"\
              string\"\n              },\n              \"major\": {\n           \
              \     \"title\": \"Major\",\n                \"description\": \"Major\"\
              ,\n                \"type\": \"string\"\n              },\n        \
              \      \"degree\": {\n                \"title\": \"Degree\",\n     \
              \           \"description\": \"Degree\",\n                \"type\":\
              \ \"string\"\n              }\n            }\n          }\n        },\n\
              \        \"additional_skills\": {\n          \"title\": \"Additional\
              \ Skills\",\n          \"description\": \"In addition to you work history,\
              \ are there and other skill or experiences we should consider\",\n \
              \         \"type\": \"string\"\n        }\n      }\n    },\n    \"employment_history\"\
              : {\n      \"title\": \"Emplyment History\",\n      \"description\"\
              : \"Provide Employment History\",\n      \"type\": \"array\",\n    \
              \  \"items\": {\n        \"type\": \"object\",\n        \"properties\"\
              : {\n          \"company_name\": {\n            \"title\": \"Company\
              \ Name\",\n            \"description\": \"Degree\",\n            \"\
              type\": \"string\"\n          },\n          \"address\": {\n       \
              \     \"title\": \"Address\",\n            \"description\": \"Address\"\
              ,\n            \"type\": \"string\"\n          },\n          \"telephone\"\
              : {\n            \"title\": \"Telephone\",\n            \"description\"\
              : \"Telephone\",\n            \"type\": \"string\"\n          },\n \
              \         \"start_date\": {\n            \"title\": \"Start Date\",\n\
              \            \"description\": \"Start Date\",\n            \"type\"\
              : \"string\"\n          },\n          \"start_position\": {\n      \
              \      \"title\": \"Start Position\",\n            \"description\":\
              \ \"Start Position\",\n            \"type\": \"string\"\n          },\n\
              \          \"end_date\": {\n            \"title\": \"End date\",\n \
              \           \"description\": \"End date\",\n            \"type\": \"\
              string\"\n          },\n          \"end_position\": {\n            \"\
              title\": \"End Position\",\n            \"description\": \"End Position\"\
              ,\n            \"type\": \"string\"\n          },\n          \"currently_job\"\
              : {\n            \"title\": \"Currently employed\",\n            \"\
              description\": \"Are you currently employed here\",\n            \"\
              type\": \"boolean\"\n          },\n          \"comments\": {\n     \
              \       \"title\": \"Comments\",\n            \"description\": \"ANy\
              \ comments. . include reson for leaving if applicable\",\n         \
              \   \"type\": \"string\"\n          },\n          \"supervisor_name\"\
              : {\n            \"title\": \"Supervisots name\",\n            \"description\"\
              : \"Supervisors name\",\n            \"type\": \"string\"\n        \
              \  },\n          \"contact_consent\": {\n            \"title\": \"Contact\
              \ consent\",\n            \"description\": \"Can we contact this employer\"\
              ,\n            \"type\": \"boolean\"\n          },\n          \"contact_name\"\
              : {\n            \"title\": \"Contact name\",\n            \"description\"\
              : \"Name of persone to contact\",\n            \"type\": \"string\"\n\
              \          }\n        }\n      }\n    },\n    \"references\": {\n  \
              \    \"title\": \"References\",\n      \"description\": \"Array\",\n\
              \      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"\
              object\",\n        \"properties\": {\n          \"name\": {\n      \
              \      \"title\": \"Name\",\n            \"description\": \"Name\",\n\
              \            \"type\": \"string\"\n          },\n          \"address\"\
              : {\n            \"title\": \"Addres\",\n            \"description\"\
              : \"Address\",\n            \"type\": \"string\"\n          },\n   \
              \       \"phone\": {\n            \"title\": \"Phone\",\n          \
              \  \"description\": \"Phone\",\n            \"type\": \"string\"\n \
              \         }\n        }\n      }\n    }\n  },\n  \"additionalProperties\"\
              : false,\n  \"required\": [\n    \"position\"\n  ]\n}\n  }"
      security:
      - JSONAPI: []
    parameters:
    - name: "schema_name"
      in: "path"
      required: true
      type: "string"
  /assets/{user_id}/{folder}/{file_name}:
    get:
      tags:
      - "Assets"
      summary: "Get users files"
      description: "Get file for user"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      responses:
        200:
          description: "Status 200"
    post:
      tags:
      - "Assets"
      summary: "Upload users files"
      description: "Upload file for user"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      responses:
        200:
          description: "Status 200"
    delete:
      tags:
      - "Assets"
      summary: "Delete users files"
      description: "Delete file for user"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      responses:
        200:
          description: "Status 200"
    patch:
      tags:
      - "Assets"
      summary: "Update users files"
      description: "Update new version of file. Uploads a new file and points to it"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        description: "Should contain the JWT token.\n                Format of the\
          \ value is : Bearer $JWT_TOKEN"
        x-example: "Bearer xxxxxxxxx.yyyyyyyyyy.zzzzzzzzz"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
        description: "Request and Response is always JSON"
        x-example: "application/vnd.api+json"
      responses:
        200:
          description: "Status 200"
    parameters:
    - name: "user_id"
      in: "path"
      required: true
      type: "string"
      x-example: "1"
    - name: "folder"
      in: "path"
      required: true
      type: "string"
      x-example: "documents"
    - name: "file_name"
      in: "path"
      required: true
      type: "string"
      x-example: "sa0df0f97ad0s9f7ds9"
securityDefinitions:
  JWT:
    description: "Authorization with JWT Token passed as `authorization` header. See\
      \ Headers section."
    type: "apiKey"
    name: "Authorization"
    in: "header"
  JSONAPI:
    type: "apiKey"
    name: "Accept"
    in: "header"
definitions:
  User:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          id:
            type: "string"
          type:
            type: "string"
          links:
            type: "object"
            properties:
              self:
                type: "string"
          attributes:
            type: "object"
            properties:
              name:
                type: "object"
              email:
                type: "string"
              first_name:
                type: "object"
              last_name:
                type: "object"
              status:
                type: "string"
              mobile_no:
                type: "object"
              birth_date:
                type: "object"
              avatar:
                type: "object"
              address_data:
                type: "object"
              position:
                type: "string"
              caregiver_type:
                type: "string"
              role:
                type: "object"
              required_documents:
                type: "object"
              settings:
                type: "object"
              age:
                type: "object"
          relationships:
            type: "object"
            properties:
              documents:
                type: "object"
                properties:
                  links:
                    type: "object"
                    properties:
                      self:
                        type: "string"
                      related:
                        type: "string"
    example: "{\n    \"data\": {\n        \"id\": \"1060\",\n        \"type\": \"\
      users\",\n        \"links\": {\n            \"self\": \"http://www.example.com/api/v1/users/1060\"\
      \n        },\n        \"attributes\": {\n            \"name\": \"Jim Duggan\"\
      ,\n            \"email\": \"3@jacobsonbeatty.net\",\n            \"first_name\"\
      : \"Jim\",\n            \"last_name\": \"Duggan\",\n            \"status\":\
      \ \"invited\",\n            \"mobile_no\": \"0722334455\",\n            \"birth_date\"\
      : \"12/12/012\",\n            \"avatar\": \"http://link\",\n            \"address_data\"\
      : {\n                \"address1\": \"P.O  Box 324 \",\n                \"country\"\
      : \"Kenya\"\n            },\n            \"position\": \"other\",\n        \
      \    \"caregiver_type\": \"specialist\",\n            \"role\": \"trainer\"\
      ,\n            \"required_documents\": {\n                \"applied\": [\n \
      \                   \"drivers_license\"\n                ]\n            },\n\
      \            \"settings\": null,\n            \"age\": 23\n        }\n    }\n\
      }"
  Users:
    type: "object"
    example: "{\n    \"data\": [\n        {\n            \"id\": \"1060\",\n     \
      \       \"type\": \"users\",\n            \"links\": {\n                \"self\"\
      : \"http://www.example.com/api/v1/users/1060\"\n            },\n           \
      \ \"attributes\": {\n                \"name\": \"Jim Duggan\",\n           \
      \     \"email\": \"3@jacobsonbeatty.net\",\n                \"first_name\":\
      \ \"Jim\",\n                \"last_name\": \"Duggan\",\n                \"status\"\
      : \"invited\",\n                \"mobile_no\": \"0722334455\",\n           \
      \     \"birth_date\": \"12/12/012\",\n                \"avatar\": \"http://link\"\
      ,\n                \"address_data\": {\n                    \"address1\": \"\
      P.O  Box 324 \",\n                    \"country\": \"Kenya\"\n             \
      \   },\n                \"position\": \"other\",\n                \"caregiver_type\"\
      : \"specialist\",\n                \"role\": \"trainer\",\n                \"\
      required_documents\": {\n                    \"applied\": [\n              \
      \          \"drivers_license\"\n                    ]\n                },\n\
      \                \"settings\": null,\n                \"age\": 23\n        \
      \    }\n        }\n    ]\n}"
  Document:
    type: "object"
    description: "Documents that are attacehd to a caregiers account and are tracked\
      \ for validity and currentness"
    example: "{\n      \"id\": \"52\",\n      \"type\": \"documents\",\n      \"links\"\
      : {\n        \"self\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/52\"\
      \n      },\n      \"attributes\": {\n        \"name\": \"application_data\"\
      ,\n        \"data\": {\n          \"position\": \"direct_support\",\n      \
      \    \"references\": [],\n          \"work_weekends\": true,\n          \"work_overnight\"\
      : true,\n          \"work_motivation\": \"n,mn\",\n          \"us_employability\"\
      : true,\n          \"education_history\": {},\n          \"background_history\"\
      : {\n            \"pending_cases\": false,\n            \"criminal_conviction\"\
      : false\n          },\n          \"employment_history\": [\n            {\n\
      \              \"currently_job\": false,\n              \"contact_consent\"\
      : false\n            }\n          ],\n          \"earliest_availablity\": \"\
      2018-02-08\",\n          \"valid_drivers_license\": true,\n          \"available_hours_weekly\"\
      : 5,\n          \"any_work_hindrance_condition\": \"lk\"\n        },\n     \
      \   \"attached_to_type\": \"User\",\n        \"attached_to_id\": 1,\n      \
      \  \"status\": \"verified\"\n      }\n    }"
  Documents:
    type: "object"
    example: "{\n  \"data\": [\n    {\n      \"id\": \"52\",\n      \"type\": \"documents\"\
      ,\n      \"links\": {\n        \"self\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/52\"\
      \n      },\n      \"attributes\": {\n        \"name\": \"application_data\"\
      ,\n        \"data\": {\n          \"position\": \"direct_support\",\n      \
      \    \"references\": [],\n          \"work_weekends\": true,\n          \"work_overnight\"\
      : true,\n          \"work_motivation\": \"n,mn\",\n          \"us_employability\"\
      : true,\n          \"education_history\": {},\n          \"background_history\"\
      : {\n            \"pending_cases\": false,\n            \"criminal_conviction\"\
      : false\n          },\n          \"employment_history\": [\n            {\n\
      \              \"currently_job\": false,\n              \"contact_consent\"\
      : false\n            }\n          ],\n          \"earliest_availablity\": \"\
      2018-02-08\",\n          \"valid_drivers_license\": true,\n          \"available_hours_weekly\"\
      : 5,\n          \"any_work_hindrance_condition\": \"lk\"\n        },\n     \
      \   \"attached_to_type\": \"User\",\n        \"attached_to_id\": 1,\n      \
      \  \"status\": \"verified\"\n      },\n      \"relationships\": {\n        \"\
      attached_to\": {\n          \"links\": {\n            \"self\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/52/relationships/attached_to\"\
      ,\n            \"related\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/52/attached_to\"\
      \n          }\n        }\n      }\n    },\n    {\n      \"id\": \"55\",\n  \
      \    \"type\": \"documents\",\n      \"links\": {\n        \"self\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/55\"\
      \n      },\n      \"attributes\": {\n        \"name\": \"permanent_employment_check\"\
      ,\n        \"data\": {\n          \"attachments\": []\n        },\n        \"\
      attached_to_type\": \"User\",\n        \"attached_to_id\": 1,\n        \"status\"\
      : \"submitted\"\n      },\n      \"relationships\": {\n        \"attached_to\"\
      : {\n          \"links\": {\n            \"self\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/55/relationships/attached_to\"\
      ,\n            \"related\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/55/attached_to\"\
      \n          }\n        }\n      }\n    },\n    {\n      \"id\": \"54\",\n  \
      \    \"type\": \"documents\",\n      \"links\": {\n        \"self\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/54\"\
      \n      },\n      \"attributes\": {\n        \"name\": \"background_consent\"\
      ,\n        \"data\": {\n          \"consent\": true,\n          \"authorization\"\
      : \"1234\"\n        },\n        \"attached_to_type\": \"User\",\n        \"\
      attached_to_id\": 1,\n        \"status\": \"verified\"\n      },\n      \"relationships\"\
      : {\n        \"attached_to\": {\n          \"links\": {\n            \"self\"\
      : \"https://careflow-api-staging.zegetech.com/api/v1/documents/54/relationships/attached_to\"\
      ,\n            \"related\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/54/attached_to\"\
      \n          }\n        }\n      }\n    },\n    {\n      \"id\": \"51\",\n  \
      \    \"type\": \"documents\",\n      \"links\": {\n        \"self\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/51\"\
      \n      },\n      \"attributes\": {\n        \"name\": \"drivers_credential\"\
      ,\n        \"data\": {\n          \"attachments\": [],\n          \"expiry_date\"\
      : \"2018-02-08\"\n        },\n        \"attached_to_type\": \"User\",\n    \
      \    \"attached_to_id\": 1,\n        \"status\": \"verified\"\n      },\n  \
      \    \"relationships\": {\n        \"attached_to\": {\n          \"links\":\
      \ {\n            \"self\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/51/relationships/attached_to\"\
      ,\n            \"related\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/51/attached_to\"\
      \n          }\n        }\n      }\n    },\n    {\n      \"id\": \"57\",\n  \
      \    \"type\": \"documents\",\n      \"links\": {\n        \"self\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/57\"\
      \n      },\n      \"attributes\": {\n        \"name\": \"interview_check\",\n\
      \        \"data\": {\n          \"attachments\": []\n        },\n        \"\
      attached_to_type\": \"User\",\n        \"attached_to_id\": 1,\n        \"status\"\
      : \"submitted\"\n      },\n      \"relationships\": {\n        \"attached_to\"\
      : {\n          \"links\": {\n            \"self\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/57/relationships/attached_to\"\
      ,\n            \"related\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/57/attached_to\"\
      \n          }\n        }\n      }\n    },\n    {\n      \"id\": \"53\",\n  \
      \    \"type\": \"documents\",\n      \"links\": {\n        \"self\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/53\"\
      \n      },\n      \"attributes\": {\n        \"name\": \"health_notice\",\n\
      \        \"data\": {\n          \"acknowledgement\": true\n        },\n    \
      \    \"attached_to_type\": \"User\",\n        \"attached_to_id\": 1,\n     \
      \   \"status\": \"rejected\"\n      },\n      \"relationships\": {\n       \
      \ \"attached_to\": {\n          \"links\": {\n            \"self\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/53/relationships/attached_to\"\
      ,\n            \"related\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/53/attached_to\"\
      \n          }\n        }\n      }\n    },\n    {\n      \"id\": \"56\",\n  \
      \    \"type\": \"documents\",\n      \"links\": {\n        \"self\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/56\"\
      \n      },\n      \"attributes\": {\n        \"name\": \"phase1_credential\"\
      ,\n        \"data\": {\n          \"file\": [],\n          \"grade\": \"klj\"\
      ,\n          \"issue_date\": \"213213\",\n          \"test_location\": \"maryland\"\
      \n        },\n        \"attached_to_type\": \"User\",\n        \"attached_to_id\"\
      : 1,\n        \"status\": \"submitted\"\n      },\n      \"relationships\":\
      \ {\n        \"attached_to\": {\n          \"links\": {\n            \"self\"\
      : \"https://careflow-api-staging.zegetech.com/api/v1/documents/56/relationships/attached_to\"\
      ,\n            \"related\": \"https://careflow-api-staging.zegetech.com/api/v1/documents/56/attached_to\"\
      \n          }\n        }\n      }\n    }\n  ],\n  \"meta\": {\n    \"record_count\"\
      : 7,\n    \"page_count\": 1\n  },\n  \"links\": {\n    \"first\": \"https://careflow-api-staging.zegetech.com/api/v1/users/1/documents?page%5Bnumber%5D=1\\\
      u0026page%5Bsize%5D=10\",\n    \"last\": \"https://careflow-api-staging.zegetech.com/api/v1/users/1/documents?page%5Bnumber%5D=1\\\
      u0026page%5Bsize%5D=10\"\n  }\n}"
  Stream:
    type: "object"
    example: "{\n  \"data\": {\n    \"id\": \"1\",\n    \"type\": \"streams\",\n \
      \   \"links\": {\n      \"self\": \"http://localhost:3000/api/v1/streams/1\"\
      \n    },\n    \"attributes\": {\n      \"originator_id\": 1,\n      \"originator_type\"\
      : \"SystemUser\",\n      \"level\": \"info\",\n      \"recipient_id\": 1,\n\
      \      \"send_at\": null,\n      \"status\": \"new\"\n    },\n    \"relationships\"\
      : {\n      \"originator\": {\n        \"links\": {\n          \"self\": \"http://localhost:3000/api/v1/streams/1/relationships/originator\"\
      ,\n          \"related\": \"http://localhost:3000/api/v1/streams/1/originator\"\
      \n        }\n      }\n    }\n  }\n}"
  Streams:
    type: "object"
    example: "{\n  \"data\": [\n    {\n      \"id\": \"1\",\n      \"type\": \"streams\"\
      ,\n      \"links\": {\n        \"self\": \"http://localhost:3000/api/v1/streams/1\"\
      \n      },\n      \"attributes\": {\n        \"originator_id\": 1,\n       \
      \ \"originator_type\": \"SystemUser\",\n        \"level\": \"info\",\n     \
      \   \"recipient_id\": 1,\n        \"send_at\": null,\n        \"status\": \"\
      new\"\n      },\n      \"relationships\": {\n        \"originator\": {\n   \
      \       \"links\": {\n            \"self\": \"http://localhost:3000/api/v1/streams/1/relationships/originator\"\
      ,\n            \"related\": \"http://localhost:3000/api/v1/streams/1/originator\"\
      \n          }\n        }\n      }\n    },\n    {\n      \"id\": \"2\",\n   \
      \   \"type\": \"streams\",\n      \"links\": {\n        \"self\": \"http://localhost:3000/api/v1/streams/2\"\
      \n      },\n      \"attributes\": {\n        \"originator_id\": 1,\n       \
      \ \"originator_type\": \"SystemUser\",\n        \"level\": \"info\",\n     \
      \   \"recipient_id\": 2,\n        \"send_at\": null,\n        \"status\": \"\
      new\"\n      },\n      \"relationships\": {\n        \"originator\": {\n   \
      \       \"links\": {\n            \"self\": \"http://localhost:3000/api/v1/streams/2/relationships/originator\"\
      ,\n            \"related\": \"http://localhost:3000/api/v1/streams/2/originator\"\
      \n          }\n        }\n      }\n    }\n  ],\n  \"meta\": {\n    \"record_count\"\
      : 2,\n    \"page_count\": null\n  },\n  \"links\": {\n    \"first\": \"http://localhost:3000/api/v1/streams?page%5Bnumber%5D=1\\\
      u0026page%5Bsize%5D=10\",\n    \"last\": \"http://localhost:3000/api/v1/streams?page%5Bnumber%5D=1\\\
      u0026page%5Bsize%5D=10\"\n  }\n}"
  Notification:
    type: "object"
    description: "Notifications to an activity. Can also be used as a messaging model\
      \ with the to and from "
    example: "{\n  \"data\": {\n    \"id\": \"3\",\n    \"type\": \"notifications\"\
      ,\n    \"links\": {\n      \"self\": \"http://localhost:3000/api/v1/notifications/3\"\
      \n    },\n    \"attributes\": {\n      \"originator_id\": 1,\n      \"originator_type\"\
      : \"SystemUser\",\n      \"level\": \"info\",\n      \"recipient_id\": 1,\n\
      \      \"send_at\": null,\n      \"status\": \"new\",\n      \"message\": \"\
      You application was successful. You will be contacted for and interview. You\
      \ will also need to upoad some pre hire documents listed\",\n      \"channels\"\
      : [\n        \"sms\",\n        \"email\"\n      ],\n      \"action_url\": \"\
      /\",\n      \"mark\": null\n    },\n    \"relationships\": {\n      \"originator\"\
      : {\n        \"links\": {\n          \"self\": \"http://localhost:3000/api/v1/notifications/3/relationships/originator\"\
      ,\n          \"related\": \"http://localhost:3000/api/v1/notifications/3/originator\"\
      \n        }\n      }\n    }\n  }\n}"
  Notifications:
    type: "object"
    description: "Notifications to an activity. Can also be used as a messaging model\
      \ with the to and from "
    example: "{\n  \"data\": [\n    {\n      \"id\": \"3\",\n      \"type\": \"notifications\"\
      ,\n      \"links\": {\n        \"self\": \"http://localhost:3000/api/v1/notifications/3\"\
      \n      },\n      \"attributes\": {\n        \"originator_id\": 1,\n       \
      \ \"originator_type\": \"SystemUser\",\n        \"level\": \"info\",\n     \
      \   \"recipient_id\": 1,\n        \"send_at\": null,\n        \"status\": \"\
      new\",\n        \"message\": \"You application was successful. You will be contacted\
      \ for and interview. You will also need to upoad some pre hire documents listed\"\
      ,\n        \"channels\": [\n          \"sms\",\n          \"email\"\n      \
      \  ],\n        \"action_url\": \"/\",\n        \"mark\": null\n      },\n  \
      \    \"relationships\": {\n        \"originator\": {\n          \"links\": {\n\
      \            \"self\": \"http://localhost:3000/api/v1/notifications/3/relationships/originator\"\
      ,\n            \"related\": \"http://localhost:3000/api/v1/notifications/3/originator\"\
      \n          }\n        }\n      }\n    }\n  ],\n  \"meta\": {\n    \"record_count\"\
      : 1,\n    \"page_count\": null\n  },\n  \"links\": {\n    \"first\": \"http://localhost:3000/api/v1/notifications?page%5Bnumber%5D=1\\\
      u0026page%5Bsize%5D=10\",\n    \"last\": \"http://localhost:3000/api/v1/notifications?page%5Bnumber%5D=1\\\
      u0026page%5Bsize%5D=10\"\n  }\n}"
  Event:
    type: "object"
    description: "An actitivy describes an event in time or just a notification"
    example: "{\n  \"data\": {\n    \"id\": \"2\",\n    \"type\": \"events\",\n  \
      \  \"links\": {\n      \"self\": \"http://localhost:3000/api/v1/events/2\"\n\
      \    },\n    \"attributes\": {\n      \"start_at\": null,\n      \"end_at\"\
      : null,\n      \"title\": null,\n      \"description\": null\n    },\n    \"\
      relationships\": {\n      \"attached_to\": {\n        \"links\": {\n       \
      \   \"self\": \"http://localhost:3000/api/v1/events/2/relationships/attached_to\"\
      ,\n          \"related\": \"http://localhost:3000/api/v1/events/2/attached_to\"\
      \n        }\n      },\n      \"occurence\": {\n        \"links\": {\n      \
      \    \"self\": \"http://localhost:3000/api/v1/events/2/relationships/occurence\"\
      ,\n          \"related\": \"http://localhost:3000/api/v1/events/2/occurence\"\
      \n        }\n      }\n    }\n  }\n}"
  Events:
    type: "object"
    description: "An actitivy describes an event in time or just a notification"
    example: "{\n  \"data\": [\n    {\n      \"id\": \"2\",\n      \"type\": \"events\"\
      ,\n      \"links\": {\n        \"self\": \"http://localhost:3000/api/v1/events/2\"\
      \n      },\n      \"attributes\": {\n        \"start_at\": null,\n        \"\
      end_at\": null,\n        \"title\": null,\n        \"description\": null\n \
      \     },\n      \"relationships\": {\n        \"attached_to\": {\n         \
      \ \"links\": {\n            \"self\": \"http://localhost:3000/api/v1/events/2/relationships/attached_to\"\
      ,\n            \"related\": \"http://localhost:3000/api/v1/events/2/attached_to\"\
      \n          }\n        },\n        \"occurence\": {\n          \"links\": {\n\
      \            \"self\": \"http://localhost:3000/api/v1/events/2/relationships/occurence\"\
      ,\n            \"related\": \"http://localhost:3000/api/v1/events/2/occurence\"\
      \n          }\n        }\n      }\n    }\n  ],\n  \"meta\": {\n    \"record_count\"\
      : 1,\n    \"page_count\": null\n  },\n  \"links\": {\n    \"first\": \"http://localhost:3000/api/v1/events?page%5Bnumber%5D=1\\\
      u0026page%5Bsize%5D=10\",\n    \"last\": \"http://localhost:3000/api/v1/events?page%5Bnumber%5D=1\\\
      u0026page%5Bsize%5D=10\"\n  }\n}"
  Contract:
    type: "object"
    description: "Contract between caregivers and agencies"
    example: "{\n  \"data\": {\n    \"id\": \"1\",\n    \"type\": \"contracts\",\n\
      \    \"links\": {\n      \"self\": \"http://localhost:3000/api/v1/contracts/1\"\
      \n    },\n    \"attributes\": {\n      \"user_id\": 1,\n      \"agency\": {\n\
      \        \"id\": 1,\n        \"name\": \"Agency DC\",\n        \"company_id\"\
      : 1,\n        \"company_type\": \"waiver\"\n      },\n      \"hire_date\": null,\n\
      \      \"position\": \"direct_support\",\n      \"status\": \"new\"\n    }\n\
      \  }\n}"
  Contracts:
    type: "object"
    description: "Contract between caregivers and agencies"
    example: "{\n  \"data\": [\n    {\n      \"id\": \"1\",\n      \"type\": \"contracts\"\
      ,\n      \"links\": {\n        \"self\": \"http://localhost:3000/api/v1/contracts/1\"\
      \n      },\n      \"attributes\": {\n        \"user_id\": 1,\n        \"agency\"\
      : {\n          \"id\": 1,\n          \"name\": \"AC DC\",\n          \"company_id\"\
      : 1,\n          \"company_type\": \"waiver\"\n        },\n        \"hire_date\"\
      : null,\n        \"position\": \"direct_support\",\n        \"status\": \"new\"\
      \n      }\n    },\n    {\n      \"id\": \"2\",\n      \"type\": \"contracts\"\
      ,\n      \"links\": {\n        \"self\": \"http://localhost:3000/api/v1/contracts/2\"\
      \n      },\n      \"attributes\": {\n        \"user_id\": 2,\n        \"agency\"\
      : {\n          \"id\": 1,\n          \"name\": \"AC DC\",\n          \"company_id\"\
      : 1,\n          \"company_type\": \"waiver\"\n        },\n        \"hire_date\"\
      : null,\n        \"position\": \"direct_support\",\n        \"status\": \"new\"\
      \n      }\n    }\n  ],\n  \"meta\": {\n    \"record_count\": 2,\n    \"page_count\"\
      : null\n  },\n  \"links\": {\n    \"first\": \"http://localhost:3000/api/v1/contracts?page%5Bnumber%5D=1\\\
      u0026page%5Bsize%5D=10\",\n    \"last\": \"http://localhost:3000/api/v1/contracts?page%5Bnumber%5D=1\\\
      u0026page%5Bsize%5D=10\"\n  }\n}"
  Placement:
    type: "object"
    description: "This model corresponsds to a caregivers station which is a room\
      \ and facility. "
    example: "{\n    \"data\": {\n        \"id\": \"24\",\n        \"type\": \"placements\"\
      ,\n        \"links\": {\n            \"self\": \"http://localhost:3000/api/v1/placements/24\"\
      \n        },\n        \"attributes\": {\n            \"user_id\": 1,\n     \
      \       \"contract_id\": 1,\n            \"station\": {\n                \"\
      id\": 1,\n                \"name\": \"Green room\",\n                \"agency_id\"\
      : 1,\n                \"company_id\": 1,\n                \"company_type\":\
      \ \"waiver\"\n            },\n            \"start_date\": \"2018-02-19\",\n\
      \            \"end_date\": null,\n            \"onward_placement_id\": 19,\n\
      \            \"prior_placement_id\": null,\n            \"assignments_attributes\"\
      : [\n                {\n                    \"person\": {\n                \
      \        \"name\": \"Deion Stoltenberg\",\n                        \"station_id\"\
      : 1\n                    }\n                },\n                {\n        \
      \            \"person\": {\n                        \"name\": \"Phyllis Yundt\"\
      ,\n                        \"station_id\": 1\n                    }\n      \
      \          },\n                {\n                    \"person\": {\n      \
      \                  \"name\": \"Reymundo Lakin DDS\",\n                     \
      \   \"station_id\": 1\n                    }\n                }\n          \
      \  ]\n        }\n    }\n}"
  Placements:
    type: "object"
    example: "{\n  \"data\": [\n    {\n      \"id\": \"1\",\n      \"type\": \"placements\"\
      ,\n      \"links\": {\n        \"self\": \"http://localhost:3000/api/v1/placements/1\"\
      \n      },\n      \"attributes\": {\n        \"user_id\": 1,\n        \"contract_id\"\
      : 1,\n        \"station\": {\n          \"id\": 1,\n          \"name\": \"Green\
      \ room\",\n          \"agency_id\": 1,\n          \"company_id\": 1,\n     \
      \     \"company_type\": \"waiver\"\n        },\n        \"start_date\": \"2018-02-19\"\
      ,\n        \"end_date\": null,\n        \"onward_placement_id\": null,\n   \
      \     \"prior_placement_id\": null,\n        \"assignments_attributes\": [\n\
      \          1,\n          2,\n          3\n        ]\n      }\n    }\n  ],\n\
      \  \"meta\": {\n    \"record_count\": 1,\n    \"page_count\": null\n  },\n \
      \ \"links\": {\n    \"first\": \"http://localhost:3000/api/v1/placements?page%5Bnumber%5D=1\\\
      u0026page%5Bsize%5D=10\",\n    \"last\": \"http://localhost:3000/api/v1/placements?page%5Bnumber%5D=1\\\
      u0026page%5Bsize%5D=10\"\n  }\n}"